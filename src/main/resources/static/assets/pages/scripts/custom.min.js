// /**
// Custom module for you to write your own javascript functions
// **/
// var Custom = function () {

//     // private functions & variables

//     var myFunc = function(text) {
//         alert(text);
//     }

//     // public functions
//     return {

//         //main function
//         init: function () {
//             //initialize here something.            
//         },

//         /**
//         * 判定字符串是否为null或者empty
//         * @param $str 待判断的string
//         * @return boolean
//         * @author David Xu 2017/01/19 
//         * @example !stringIsNullOrEmpty($("#Body_TextBox1").val())
//         */

//         stringIsNullOrEmpty: function stringIsNullOrEmpty($str) {
//             if($str === null || $str === undefined || $str === ''){
//                 return true;
//             }else{
//                 return false;
//             }
//         },

//         /**
//         * 前台获取URL中的GET参数
//         * @name 参数名
//         * @return string
//         * @author David Xu 2017/03/02 
//         * @example getUrlParam("business_type");
//         */
//         getUrlParam: function getUrlParam(name) {
//             var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象
//             var r = window.location.search.substr(1).match(reg); //匹配目标参数
//             if (r != null)
//                 return unescape(r[2]);
//             return null; //返回参数值
//         },

//         /**
//         * 获取日期的时间戳
//         * @author David Xu 2017/03/14
//         * @example getTimestamp("2014-03-14")
//         */
//         getTimestamp: function getTimestamp(date) {

//             if (stringIsNullOrEmpty(date)) {
//                 return Math.round(new Date().getTime() / 1000);
//             } else {
//                 return Math.round(new Date(date).getTime() / 1000);
//             }

//         },

//         *
//         * 获取Json数组列的数量
//         * @author David Xu 2017/06/14
//         * @example getJsonArrayColumnCount(jsonArray)
        
//         getJsonArrayColumnCount: function getJsonArrayColumnCount(jsonArray) {
//             var headArray = [];
//             for (var i in jsonArray[0]) {
//                 headArray[headArray.length] = i;
//             }
//             return headArray.length;
//         },

//         /**
//         * 检验用户密码强度
//         * @author David Xu 2017/08/27
//         * @example getTimestamp("2014-08-27")
//         */
//         CheckIntensity: function CheckIntensity(pwd) {
//             var m = 0;
//             var Modes = 0;
//             for (i = 0; i < pwd.length; i++) {
//                 var charType = 0;
//                 var t = pwd.charCodeAt(i);
//                 if (t >= 48 && t <= 57) { charType = 1; }
//                 else if (t >= 65 && t <= 90) { charType = 2; }
//                 else if (t >= 97 && t <= 122) { charType = 4; }
//                 else { charType = 4; }
//                 Modes |= charType;
//             }
//             for (i = 0; i < 4; i++) {
//                 if (Modes & 1) { m++; }
//                 Modes >>>= 1;
//             }
//             if (pwd.length <= 4) { m = 1; }
//             if (pwd.length <= 0) { m = 0; }
//             switch (m) {
//                 case 1:
//                     return 1; // 如果输入的密码位数少于5位，那么就判定为弱。如果输入的密码只由数字、小写字母、大写字母或其它特殊符号当中的一种组成，则判定为弱。
//                     break;
//                 case 2:
//                     return 2; // 如果密码由数字、小写字母、大写字母或其它特殊符号当中的两种组成，则判定为中。
//                     break;
//                 case 3:
//                     return 3; // 如果密码由数字、小写字母、大写字母或其它特殊符号当中的三种以上组成，则判定为强。
//                     break;
//                 default:
//                     return 1;
//                     break;
//             }
//         } 

//     };

// }();

// jQuery(document).ready(function() {    
//    Custom.init(); 
// });

// /***
// Usage
// ***/
// //Custom.doSomeStuff();